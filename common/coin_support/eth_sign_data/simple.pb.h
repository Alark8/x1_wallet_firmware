/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6 */

#ifndef PB_SIMPLE_PB_H_INCLUDED
#define PB_SIMPLE_PB_H_INCLUDED
#include "../../protocol_buffers/pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _TypedDataStruct_Eip712DataType {
  TypedDataStruct_Eip712DataType_UINT    = 1,
  TypedDataStruct_Eip712DataType_INT     = 2,
  TypedDataStruct_Eip712DataType_BYTES   = 3,
  TypedDataStruct_Eip712DataType_STRING  = 4,
  TypedDataStruct_Eip712DataType_BOOL    = 5,
  TypedDataStruct_Eip712DataType_ADDRESS = 6,
  TypedDataStruct_Eip712DataType_ARRAY   = 7,
  TypedDataStruct_Eip712DataType_STRUCT  = 8
} TypedDataStruct_Eip712DataType;

typedef enum _MessageData_MessageType {
  MessageData_MessageType_ETH_SIGN        = 1,
  MessageData_MessageType_PERSONAL_SIGN   = 2,
  MessageData_MessageType_SIGN_TYPED_DATA = 3
} MessageData_MessageType;

/* Struct definitions */
typedef struct _TypedDataStruct {
  pb_callback_t members;
} TypedDataStruct;

typedef struct _LinkedList {
  int32_t value;
  struct _LinkedList *next;
} LinkedList;

typedef struct _MessageData {
  MessageData_MessageType messageType;
  pb_callback_t data_string;
  pb_callback_t data_bytes;
  bool has_eip712data;
  TypedDataStruct eip712data;
} MessageData;

typedef struct _TypedDataStruct_Eip712FieldType {
  TypedDataStruct_Eip712DataType data_type;
  bool has_size;
  uint32_t size;
  struct _TypedDataStruct_Eip712FieldType *entry_type;
  pb_callback_t struct_name;
} TypedDataStruct_Eip712FieldType;

typedef struct _TypedDataStruct_Eip712StructMember {
  TypedDataStruct_Eip712FieldType type;
  pb_callback_t name;
} TypedDataStruct_Eip712StructMember;

/* Helper constants for enums */
#define _TypedDataStruct_Eip712DataType_MIN TypedDataStruct_Eip712DataType_UINT
#define _TypedDataStruct_Eip712DataType_MAX TypedDataStruct_Eip712DataType_STRUCT
#define _TypedDataStruct_Eip712DataType_ARRAYSIZE \
  ((TypedDataStruct_Eip712DataType)(TypedDataStruct_Eip712DataType_STRUCT + 1))

#define _MessageData_MessageType_MIN       MessageData_MessageType_ETH_SIGN
#define _MessageData_MessageType_MAX       MessageData_MessageType_SIGN_TYPED_DATA
#define _MessageData_MessageType_ARRAYSIZE ((MessageData_MessageType)(MessageData_MessageType_SIGN_TYPED_DATA + 1))

#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define LinkedList_init_default \
  { 0, NULL }
#define TypedDataStruct_init_default \
  {                                  \
    { {NULL}, NULL }                 \
  }
#define TypedDataStruct_Eip712StructMember_init_default            \
  {                                                                \
    TypedDataStruct_Eip712FieldType_init_default, { {NULL}, NULL } \
  }
#define TypedDataStruct_Eip712FieldType_init_default                      \
  {                                                                       \
    _TypedDataStruct_Eip712DataType_MIN, false, 0, NULL, { {NULL}, NULL } \
  }
#define MessageData_init_default \
  { _MessageData_MessageType_MIN, {{NULL}, NULL}, {{NULL}, NULL}, false, TypedDataStruct_init_default }
#define LinkedList_init_zero \
  { 0, NULL }
#define TypedDataStruct_init_zero \
  {                               \
    { {NULL}, NULL }              \
  }
#define TypedDataStruct_Eip712StructMember_init_zero            \
  {                                                             \
    TypedDataStruct_Eip712FieldType_init_zero, { {NULL}, NULL } \
  }
#define TypedDataStruct_Eip712FieldType_init_zero                         \
  {                                                                       \
    _TypedDataStruct_Eip712DataType_MIN, false, 0, NULL, { {NULL}, NULL } \
  }
#define MessageData_init_zero \
  { _MessageData_MessageType_MIN, {{NULL}, NULL}, {{NULL}, NULL}, false, TypedDataStruct_init_zero }

/* Field tags (for use in manual encoding/decoding) */
#define TypedDataStruct_members_tag                     1
#define LinkedList_value_tag                            1
#define LinkedList_next_tag                             2
#define MessageData_messageType_tag                     1
#define MessageData_data_string_tag                     2
#define MessageData_data_bytes_tag                      3
#define MessageData_eip712data_tag                      4
#define TypedDataStruct_Eip712FieldType_data_type_tag   1
#define TypedDataStruct_Eip712FieldType_size_tag        2
#define TypedDataStruct_Eip712FieldType_entry_type_tag  3
#define TypedDataStruct_Eip712FieldType_struct_name_tag 4
#define TypedDataStruct_Eip712StructMember_type_tag     1
#define TypedDataStruct_Eip712StructMember_name_tag     2

/* Struct field encoding specification for nanopb */
#define LinkedList_FIELDLIST(X, a)        \
  X(a, STATIC, REQUIRED, INT32, value, 1) \
  X(a, POINTER, OPTIONAL, MESSAGE, next, 2)
#define LinkedList_CALLBACK     NULL
#define LinkedList_DEFAULT      NULL
#define LinkedList_next_MSGTYPE LinkedList

#define TypedDataStruct_FIELDLIST(X, a) X(a, CALLBACK, REPEATED, MESSAGE, members, 1)
#define TypedDataStruct_CALLBACK        pb_default_field_callback
#define TypedDataStruct_DEFAULT         NULL
#define TypedDataStruct_members_MSGTYPE TypedDataStruct_Eip712StructMember

#define TypedDataStruct_Eip712StructMember_FIELDLIST(X, a) \
  X(a, STATIC, REQUIRED, MESSAGE, type, 1)                 \
  X(a, CALLBACK, REQUIRED, STRING, name, 2)
#define TypedDataStruct_Eip712StructMember_CALLBACK     pb_default_field_callback
#define TypedDataStruct_Eip712StructMember_DEFAULT      NULL
#define TypedDataStruct_Eip712StructMember_type_MSGTYPE TypedDataStruct_Eip712FieldType

#define TypedDataStruct_Eip712FieldType_FIELDLIST(X, a) \
  X(a, STATIC, REQUIRED, UENUM, data_type, 1)           \
  X(a, STATIC, OPTIONAL, UINT32, size, 2)               \
  X(a, POINTER, OPTIONAL, MESSAGE, entry_type, 3)       \
  X(a, CALLBACK, OPTIONAL, STRING, struct_name, 4)
#define TypedDataStruct_Eip712FieldType_CALLBACK           pb_default_field_callback
#define TypedDataStruct_Eip712FieldType_DEFAULT            (const pb_byte_t *)"\x08\x01\x00"
#define TypedDataStruct_Eip712FieldType_entry_type_MSGTYPE TypedDataStruct_Eip712FieldType

#define MessageData_FIELDLIST(X, a)                \
  X(a, STATIC, REQUIRED, UENUM, messageType, 1)    \
  X(a, CALLBACK, OPTIONAL, STRING, data_string, 2) \
  X(a, CALLBACK, OPTIONAL, BYTES, data_bytes, 3)   \
  X(a, STATIC, OPTIONAL, MESSAGE, eip712data, 4)
#define MessageData_CALLBACK           pb_default_field_callback
#define MessageData_DEFAULT            (const pb_byte_t *)"\x08\x01\x00"
#define MessageData_eip712data_MSGTYPE TypedDataStruct

extern const pb_msgdesc_t LinkedList_msg;
extern const pb_msgdesc_t TypedDataStruct_msg;
extern const pb_msgdesc_t TypedDataStruct_Eip712StructMember_msg;
extern const pb_msgdesc_t TypedDataStruct_Eip712FieldType_msg;
extern const pb_msgdesc_t MessageData_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define LinkedList_fields                         &LinkedList_msg
#define TypedDataStruct_fields                    &TypedDataStruct_msg
#define TypedDataStruct_Eip712StructMember_fields &TypedDataStruct_Eip712StructMember_msg
#define TypedDataStruct_Eip712FieldType_fields    &TypedDataStruct_Eip712FieldType_msg
#define MessageData_fields                        &MessageData_msg

/* Maximum encoded size of messages (where known) */
/* LinkedList_size depends on runtime parameters */
/* TypedDataStruct_size depends on runtime parameters */
/* TypedDataStruct_Eip712StructMember_size depends on runtime parameters */
/* TypedDataStruct_Eip712FieldType_size depends on runtime parameters */
/* MessageData_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
